
<?php
/**
 * @file
 * This is the main module file.
 */

 

 /**
 * Implements hook_help().
 */
function drupal_owasp_top10_help($path, $arg) {

  if ($path == 'admin/help#owasp') {
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The owasp module implements the OWASP TOP 10 vulnerabilities.') . '</p>';
    return $output;
  }
}



/**
* Implementation of hook_menu().
*/
function drupal_owasp_top10_menu() {

$items['owasp'] = array(
	'title' => 'OWASP TOP 10',       
	'page callback' => 'owasp_page_callback',
	'access callback' => TRUE,
	'type' => MENU_NORMAL_ITEM
         
        );

$items['owasp/CSRF'] = array(
		'title' => 'CSRF',
		'page callback' => 'owasp_csrf_page_callback',
		'access callback' => TRUE,	
		'type' => MENU_NORMAL_ITEM
);

$items['owasp/A1-Injection'] = array(
		'title' => 'A1-Injection',
		'page callback' => 'owasp_injection_page_callback',
		'access callback' => TRUE,
		'type' => MENU_NORMAL_ITEM
);

//delete user
$items['owasp/CSRF/delete/user/%'] = array(

		'page callback' => 'owasp_csrf_delete_user_callback', 		
		'page arguments' => array(1),	
		'access callback' => TRUE,
		'type' => MENU_CALLBACK
);
 
$items['owasp/Reflected XSS'] = array(
	'title' => 'Reflected XSS',        
	'access callback' => TRUE,
	//This key-value pair determines who can see the new path and content, by providing an array of specific permissions a user must have. Here is a reference page of permissions you may find useful : http://drupal.org/node/132202.
	'access arguments' => array('access content'),	
	'page callback' => 'drupal_get_form',
	'page arguments'=>array('owasp_xss_form'),
	'file' => 'owasp_xss.inc',
	'file path' => drupal_get_path('module', 'drupal_owasp_top10') . '/includes',
	'type' => MENU_NORMAL_ITEM
        );

$items['owasp/SQL Injection'] = array(
	'title' => 'SQL Injection',        
	'access callback' => TRUE,	
    'access arguments' => array('access content'),
	'page callback' => 'drupal_get_form',
    'page arguments'=>array('owasp_sqli_form'),
	'file' => 'owasp_sqli.inc', 
	'file path' => drupal_get_path('module', 'drupal_owasp_top10') . '/includes',
	'type' => MENU_NORMAL_ITEM
        );



$items['owasp/CSRF/csrf_using_anonymous_form'] = array(
	'title' => 'CSRF (anonymous form)',        
	'access callback' => TRUE,
    'access arguments' => array('access content'),
	'page callback' => 'drupal_get_form',
    'page arguments'=>array('owasp_csrf_form'),
	'file' => 'owasp_csrf.inc',
	'file path' => drupal_get_path('module', 'drupal_owasp_top10') . '/includes',
	'type' => MENU_NORMAL_ITEM
        );

$items['owasp/CSRF/csrf_using_authenticated_form'] = array(
     'title' => 'CSRF (authenticated form)',
      'access callback' => TRUE ,
      'access arguments' => array('access content'),
	  'page callback' => 'drupal_get_form',
      'page arguments'=>array('owasp_no_csrf_form'),
	  'file' => 'owasp_no_csrf.inc',
	  'file path' => drupal_get_path('module', 'drupal_owasp_top10') . '/includes',
      'type' => MENU_NORMAL_ITEM
        );


  return $items;
}

function owasp_page_callback(){

$result = "Ce projet consiste à implémenter l'ensemble du TOP 10 OWASP sous Drupal7. Le but étant de fournir les recommendations et les bonnes pratiques à suivre en terme de développement des sites internet avec Drupal.";

    return $result;

}

function owasp_csrf_page_callback(){

// 	$result = "Sous Drupal, le token anti-csrf 'form_token' est intégré systématiquement dans les formulaires accessibles en mode authentifié. Conformément aux recommandations de 'OWASP CSRF' Drupal utilise le champ 'form_token' pour se prémunir contre les attaques CSRF.<br>Ce jeton (form_token) est lié à la session de l'utilisateur actuel et au 'form_id' du formulaire.<br>Concernant les formulaires anonymes (accessibles en mode non authentifiés), ils sont vulnérables aux attaques CSRF étant donné l'bsencce de session. De toutes façon cela n'a aucun sens d'avoir des formulaires anonymes ou d'implémenter un token anti-csrf pour ces derniers.";

// 	return $result;

	
	db_set_active('owasp');	
	 
	$query = db_query("SELECT * FROM users");
	 
	db_set_active();
	 
	$users = $query->fetchAll();
	return theme('drupal_owasp_top10_csrf_template',array('users'=>$users));

}

function owasp_csrf_delete_user_callback($user_id){

	db_set_active('owasp');
	//must ude db_selete() see: http://alvinalexander.com/drupal/drupal-7-sql-delete-db_delete-form-module-example
	//$query = db_query("DELETE FROM users WHERE user_id=:user_id",array(':user_id'=>$user_id));
	db_delete('users')
	->condition('user_id', $user_id) //WHERE clause
	->execute();
	
	$query = db_query("SELECT * FROM users");	 	
	$users = $query->fetchAll();
	
	db_set_active();
	
	
	return theme('drupal_owasp_top10_csrf_template',array('users'=>$users));
	

}
 
function owasp_injection_page_callback(){
	
	// Call theme() function, so that Drupal includes the custom-page.tpl.php template
	
	return theme('drupal_owasp_top10_injection_template',array('request' => 'SELECT * FFROM users WHERE username=\'$usernname\' AND password=\'$password\''));
}




/*
 * Implement hook_theme().
*/
function drupal_owasp_top10_theme(){
	
	$module_path = drupal_get_path('module', 'drupal_owasp_top10');
	$base = array(            // Dossier contenant les fichiers tpl du module
			'path' => "$module_path/theme",
	);
	return array(// template = Le fichier tpl associé au block / variables = La variables transférer à ce fichier
			'drupal_owasp_top10_injection_template' => $base+array(
					// file name will be custom-page.tpl.php
					'template' => 'drupal_owasp_top10_injection',
					'variables' => array('items' => NULL,),
			),
			
			'drupal_owasp_top10_csrf_template' => $base+array(
					// file name will be custom-page.tpl.php
					'template' => 'drupal_owasp_top10_csrf',
					'variables' => array('items' => NULL,),
			),
	);
}
 

